#version: '3.8'
# Docker Compose for Custom.Framework Monitoring Stack
# Grafana + Prometheus for metrics visualization and collection
#
# Usage:
#   Start:  docker-compose -f Monitoring.yaml up -d
#   Stop:   docker-compose -f Monitoring.yaml down
#   Logs:   docker-compose -f Monitoring.yaml logs -f
#   Clean:  docker-compose -f Monitoring.yaml down -v

services:
  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "promtool", "check", "config", "/etc/prometheus/prometheus.yml"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Grafana - Metrics visualization and dashboarding
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"  # Mapped to 3001 to avoid conflict with existing port 3000
    environment:
      # Security
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Graf1939!
      - GF_USERS_ALLOW_SIGN_UP=false
      
      # Server settings
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3001
      
      # Database (SQLite for simplicity)
      - GF_DATABASE_TYPE=sqlite3
      
      # Logging
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=info
      
      # Datasources (auto-provision Prometheus)
      - GF_INSTALL_PLUGINS=
      
      # Analytics (disable for privacy)
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./Grafana/provisioning:/etc/grafana/provisioning:ro
      - ./Grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  monitoring:
    name: monitoring
    driver: bridge

volumes:
  prometheus-data:
    name: prometheus-data
    driver: local
  grafana-data:
    name: grafana-data
    driver: local
